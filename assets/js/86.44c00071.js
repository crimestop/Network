(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{437:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"net-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#net-node"}},[t._v("#")]),t._v(" net::node")]),t._v(" "),a("p",[t._v("存储了网络中一个格点内的信息  "),a("a",{attrs:{href:"#detailed-description"}},[t._v("More...")])]),t._v(" "),a("p",[a("code",[t._v("#include <node.hpp>")])]),t._v(" "),a("h2",{attrs:{id:"public-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-types"}},[t._v("#")]),t._v(" Public Types")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("Name")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("using "),a("RouterLink",{attrs:{to:"/Classes/structnet_1_1half__edge.html"}},[t._v("half_edge")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait >")],1),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#using-edgetype"}},[t._v("EdgeType")])],1)])]),t._v(" "),a("tr",[a("td",[t._v("using NodeKey")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#using-nodekeytype"}},[t._v("NodeKeyType")])],1)])]),t._v(" "),a("tr",[a("td",[t._v("using NodeVal")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#using-nodevaltype"}},[t._v("NodeValType")])],1)])]),t._v(" "),a("tr",[a("td",[t._v("using EdgeKey")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#using-edgekeytype"}},[t._v("EdgeKeyType")])],1)])]),t._v(" "),a("tr",[a("td",[t._v("using EdgeVal")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#using-edgevaltype"}},[t._v("EdgeValType")])],1)])]),t._v(" "),a("tr",[a("td",[t._v("using Trait")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#using-traittype"}},[t._v("TraitType")])],1)])])])]),t._v(" "),a("h2",{attrs:{id:"public-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-functions"}},[t._v("#")]),t._v(" Public Functions")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("Name")])])]),t._v(" "),a("tbody",[a("tr",[a("td"),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-node"}},[t._v("node")])],1),t._v("() =default")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-node"}},[t._v("node")])],1),t._v("(const NodeKey & k)")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-node"}},[t._v("node")])],1),t._v("(const NodeKey & k, const NodeVal & s)")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-node"}},[t._v("node")])],1),t._v("(const "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > & ) =default")],1)]),t._v(" "),a("tr",[a("td",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > &")],1),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-operator="}},[t._v("operator=")])],1),t._v("(const "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > & ) =default")],1)]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-node"}},[t._v("node")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > && ) =default")],1)]),t._v(" "),a("tr",[a("td",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > &")],1),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-operator="}},[t._v("operator=")])],1),t._v("("),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > && ) =default")],1)]),t._v(" "),a("tr",[a("td",[a("RouterLink",{attrs:{to:"/Classes/structnet_1_1half__edge.html"}},[t._v("half_edge")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait >::EdgeItrType")],1),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-add_half_edge"}},[t._v("add_half_edge")])],1),t._v("(const EdgeKey & ind1, const EdgeVal & edgev) "),a("br"),t._v("添加一条半边")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-clean"}},[t._v("clean")])],1),t._v("()")])]),t._v(" "),a("tr",[a("td",[t._v("template <typename Condition >"),a("br"),t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-delete_half_edge"}},[t._v("delete_half_edge")])],1),t._v("(Condition && cond) "),a("br"),t._v("根据条件cond(edge_itr)是否为真，决定是否删除一条半边")])]),t._v(" "),a("tr",[a("td",[t._v("template <typename Condition >"),a("br"),t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-break_edge"}},[t._v("break_edge")])],1),t._v("(Condition && cond) "),a("br"),t._v("根据条件cond(edge_itr)是否为真，决定是否将一条边拆开，成为两条不相连的半边")])]),t._v(" "),a("tr",[a("td",[t._v("template <typename Condition >"),a("br"),t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-delete_edge"}},[t._v("delete_edge")])],1),t._v("(Condition && cond) "),a("br"),t._v("根据条件cond(edge_itr)是否为真，决定是否删除一条半边，同时删除与其相连的半边")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-delete_nbedge"}},[t._v("delete_nbedge")])],1),t._v("() "),a("br"),t._v("根据条件cond(edge_itr)是否为真，决定是否删除半边所连接的另一条半边")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-reset_nbkey_of_nb"}},[t._v("reset_nbkey_of_nb")])],1),t._v("(const NodeKey & newkey) "),a("br"),t._v("对格点的每一条边，更新邻居对应的边的nbkey为newkey。用于格点的改名。")])]),t._v(" "),a("tr",[a("td",[t._v("template <typename absorb_type ,typename contract_type >"),a("br"),t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-absorb_nb"}},[t._v("absorb_nb")])],1),t._v("(const NodeKey & nbkey, const NodeVal & nbval, const absorb_type & absorb_fun, const contract_type & contract_fun) "),a("br"),t._v("对格点的指定nbkey每一条边，记录这条边的(ind,nbind)，吸收边的val到格点的val，然后删掉这条边。")])]),t._v(" "),a("tr",[a("td",[t._v("template <typename absorb_type ,typename Condition >"),a("br"),t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-harmless_absorb_nb"}},[t._v("harmless_absorb_nb")])],1),t._v("(NodeVal & thisval, std::set< std::pair< EdgeKey, EdgeKey >, typename Trait::edge2key_less > & ind_pairs, const absorb_type & absorb_fun, Condition && cond) const "),a("br"),t._v("对格点的指定nbkey每一条边，如果符合条件，记录这条边的(ind,nbind)，吸收边的val到给定的的val，将ind-pair填入ind_pairs")])]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-transfer_edge"}},[t._v("transfer_edge")])],1),t._v("(const typename "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait >::IterNode & newit) "),a("br"),t._v("对格点的每一条边，将它转移为格点newit的边")],1)]),t._v(" "),a("tr",[a("td",[t._v("template <typename Condition >"),a("br"),t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-transfer_edge"}},[t._v("transfer_edge")])],1),t._v("(const typename "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait >::IterNode & newit, Condition && cond) "),a("br"),t._v("对格点的每一条边，如果条件成立，将它和邻居的这条边转移为格点newit和邻居的边")],1)]),t._v(" "),a("tr",[a("td",[t._v("template <typename Condition >"),a("br"),t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-transfer_edge"}},[t._v("transfer_edge")])],1),t._v("(const typename "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait >::IterNode & newit, const typename "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait >::IterNode & newit2, Condition && cond) "),a("br"),t._v("对格点的每一条边，如果条件成立，将它和邻居的这条边转移为格点newit和邻居的边; 否则，将它和邻居的这条边转移为格点newit2和邻居的边")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-relink"}},[t._v("relink")])],1),t._v("(std::map< NodeKey, "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait >, typename Trait::nodekey_less > & nodes) "),a("br"),t._v("更新所有半边的nbitr和nbegitr指针")],1)]),t._v(" "),a("tr",[a("td",[t._v("bool")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-consistency"}},[t._v("consistency")])],1),t._v("(const std::map< NodeKey, "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait >, typename Trait::nodekey_less > & nodes, const NodeKey & t, std::ostream & diagnosis) const "),a("br"),t._v("检查格点的一致性")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-fope"}},[t._v("fope")])],1),t._v("(std::function< NodeVal(const NodeVal &)> f1, std::function< EdgeVal(const EdgeVal &)> f2) "),a("br"),t._v("利用函数更新格点和边上的信息")])]),t._v(" "),a("tr",[a("td",[t._v("template <typename NodeType2 >"),a("br"),t._v("NodeType2")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-fmap"}},[t._v("fmap")])],1),t._v("(const NodeKey & this_key, std::function< typename NodeType2::NodeValType(const NodeVal &)> f1, std::function< typename NodeType2::EdgeValType(const EdgeVal &)> f2) const "),a("br"),t._v("从旧的格点得到新的格点，其格点和边上的信息由旧的格点通过映射得到")])]),t._v(" "),a("tr",[a("td",[t._v("template <typename NodeType2 >"),a("br"),t._v("NodeType2")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-fmap"}},[t._v("fmap")])],1),t._v("(const NodeKey & new_key, std::function< typename NodeType2::NodeValType(const NodeVal &)> f1, std::function< typename NodeType2::EdgeValType(const EdgeVal &)> f2, std::function< typename NodeType2::NodeKeyType(const NodeKey &)> f3, std::function< typename NodeType2::EdgeKeyType(const EdgeKey &)> f4) const "),a("br"),t._v("从旧的格点得到新的格点，其格点和边的名字，以及格点和边上的信息，由旧的格点通过映射得到")])]),t._v(" "),a("tr",[a("td",[t._v("template <typename NodeVal2 ,typename EdgeVal2 ,typename Trait2 >"),a("br"),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal2, EdgeVal2, NodeKey, EdgeKey, Trait2 >")],1),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-gfmap"}},[t._v("gfmap")])],1),t._v("(const NodeKey & this_key, std::function< NodeVal2(const "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > &)> f1, std::function< EdgeVal2(const "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > &, const EdgeKey &)> f2) const "),a("br"),t._v("从旧的格点得到新的格点，其格点和边上的信息由旧的格点通过映射得到")],1)]),t._v(" "),a("tr",[a("td",[t._v("void")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#function-gfope"}},[t._v("gfope")])],1),t._v("(std::function< NodeVal(const "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > &)> f1, std::function< EdgeVal(const "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait > &, const EdgeKey &)> f2) "),a("br"),t._v("利用函数更新格点和边上的信息")],1)])])]),t._v(" "),a("h2",{attrs:{id:"public-attributes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-attributes"}},[t._v("#")]),t._v(" Public Attributes")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("Name")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("NodeKey")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#variable-key"}},[t._v("key")])],1),t._v(" "),a("br"),t._v("格点的名字")])]),t._v(" "),a("tr",[a("td",[t._v("NodeVal")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#variable-val"}},[t._v("val")])],1),t._v(" "),a("br"),t._v("格点上附着的信息")])]),t._v(" "),a("tr",[a("td",[t._v("std::map< EdgeKey, "),a("RouterLink",{attrs:{to:"/Classes/structnet_1_1half__edge.html"}},[t._v("half_edge")]),t._v("< NodeVal, EdgeVal, NodeKey, EdgeKey, Trait >, typename Trait::edgekey_less >")],1),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#variable-edges"}},[t._v("edges")])],1),t._v(" "),a("br"),t._v("格点所包含的半边, 存储了半边之间如何连接的信息")])])])]),t._v(" "),a("h2",{attrs:{id:"friends"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friends"}},[t._v("#")]),t._v(" Friends")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("Name")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("std::ostream &")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#friend-output_node_text"}},[t._v("output_node_text")])],1),t._v("(std::ostream & , const "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal1, EdgeVal1, NodeKey1, EdgeKey1, Trait1 > & ) "),a("br"),t._v("格点的字符串输出")],1)]),t._v(" "),a("tr",[a("td",[t._v("std::istream &")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#friend-input_node_text"}},[t._v("input_node_text")])],1),t._v("(std::istream & , "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal1, EdgeVal1, NodeKey1, EdgeKey1, Trait1 > & ) "),a("br"),t._v("格点的字符串输入")],1)]),t._v(" "),a("tr",[a("td",[t._v("std::ostream &")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#friend-output_node_bin"}},[t._v("output_node_bin")])],1),t._v("(std::ostream & , const "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal1, EdgeVal1, NodeKey1, EdgeKey1, Trait1 > & ) "),a("br"),t._v("格点的二进制输出")],1)]),t._v(" "),a("tr",[a("td",[t._v("std::istream &")]),t._v(" "),a("td",[a("strong",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html#friend-input_node_bin"}},[t._v("input_node_bin")])],1),t._v("(std::istream & , "),a("RouterLink",{attrs:{to:"/Classes/classnet_1_1node.html"}},[t._v("node")]),t._v("< NodeVal1, EdgeVal1, NodeKey1, EdgeKey1, Trait1 > & ) "),a("br"),t._v("格点的二进制输入")],1)])])]),t._v(" "),a("h2",{attrs:{id:"detailed-description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#detailed-description"}},[t._v("#")]),t._v(" Detailed Description")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeVal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EdgeVal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeKey")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EdgeKey")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("net")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("node")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("存储了网络中一个格点内的信息")]),t._v(" "),a("p",[a("strong",[t._v("Template Parameters")]),t._v(":")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("NodeVal")]),t._v(" 每个格点中附着的信息类型")]),t._v(" "),a("li",[a("strong",[t._v("EdgeVal")]),t._v(" 每个边上附着的信息类型")]),t._v(" "),a("li",[a("strong",[t._v("NodeKey")]),t._v(" 格点名字的类型")]),t._v(" "),a("li",[a("strong",[t._v("EdgeKey")]),t._v(" 边的名字的类型")]),t._v(" "),a("li",[a("strong",[t._v("Trait")]),t._v(" 以上类型的特征，包括输入输出和比较")])]),t._v(" "),a("p",[a("strong",[t._v("See")]),t._v(":")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/Classes/classnet_1_1network.html"}},[t._v("network")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/Classes/structnet_1_1half__edge.html"}},[t._v("half_edge")])],1)]),t._v(" "),a("p",[t._v("每个格点中有一个中心元素val, 和一些半边 每个边拥有一个名字和一个half edge对象")]),t._v(" "),a("h2",{attrs:{id:"public-types-documentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-types-documentation"}},[t._v("#")]),t._v(" Public Types Documentation")]),t._v(" "),a("h3",{attrs:{id:"using-edgetype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-edgetype"}},[t._v("#")]),t._v(" using EdgeType")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" net"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("EdgeType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  half_edge"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"using-nodekeytype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-nodekeytype"}},[t._v("#")]),t._v(" using NodeKeyType")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" net"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("NodeKeyType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"using-nodevaltype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-nodevaltype"}},[t._v("#")]),t._v(" using NodeValType")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" net"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("NodeValType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"using-edgekeytype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-edgekeytype"}},[t._v("#")]),t._v(" using EdgeKeyType")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" net"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("EdgeKeyType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"using-edgevaltype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-edgevaltype"}},[t._v("#")]),t._v(" using EdgeValType")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" net"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("EdgeValType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"using-traittype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-traittype"}},[t._v("#")]),t._v(" using TraitType")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" net"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("TraitType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  Trait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"public-functions-documentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-functions-documentation"}},[t._v("#")]),t._v(" Public Functions Documentation")]),t._v(" "),a("h3",{attrs:{id:"function-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-node"}},[t._v("#")]),t._v(" function node")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-node-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-node-2"}},[t._v("#")]),t._v(" function node")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" k\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-node-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-node-3"}},[t._v("#")]),t._v(" function node")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" s\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-node-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-node-4"}},[t._v("#")]),t._v(" function node")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-operator"}},[t._v("#")]),t._v(" function operator=")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-node-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-node-5"}},[t._v("#")]),t._v(" function node")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-operator-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-operator-2"}},[t._v("#")]),t._v(" function operator=")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-add-half-edge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-add-half-edge"}},[t._v("#")]),t._v(" function add_half_edge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("half_edge"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("EdgeItrType "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_half_edge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ind1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" edgev\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("添加一条半边")]),t._v(" "),a("h3",{attrs:{id:"function-clean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-clean"}},[t._v("#")]),t._v(" function clean")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"function-delete-half-edge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-delete-half-edge"}},[t._v("#")]),t._v(" function delete_half_edge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete_half_edge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    Condition "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" cond\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("根据条件cond(edge_itr)是否为真，决定是否删除一条半边")]),t._v(" "),a("p",[t._v("如果要删除的半边连接着另一条半边，那么保留另一条半边，使之悬空")]),t._v(" "),a("h3",{attrs:{id:"function-break-edge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-break-edge"}},[t._v("#")]),t._v(" function break_edge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("break_edge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    Condition "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" cond\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("根据条件cond(edge_itr)是否为真，决定是否将一条边拆开，成为两条不相连的半边")]),t._v(" "),a("h3",{attrs:{id:"function-delete-edge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-delete-edge"}},[t._v("#")]),t._v(" function delete_edge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete_edge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    Condition "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" cond\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("根据条件cond(edge_itr)是否为真，决定是否删除一条半边，同时删除与其相连的半边")]),t._v(" "),a("h3",{attrs:{id:"function-delete-nbedge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-delete-nbedge"}},[t._v("#")]),t._v(" function delete_nbedge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete_nbedge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("根据条件cond(edge_itr)是否为真，决定是否删除半边所连接的另一条半边")]),t._v(" "),a("h3",{attrs:{id:"function-reset-nbkey-of-nb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-reset-nbkey-of-nb"}},[t._v("#")]),t._v(" function reset_nbkey_of_nb")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset_nbkey_of_nb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" newkey\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("对格点的每一条边，更新邻居对应的边的nbkey为newkey。用于格点的改名。")]),t._v(" "),a("h3",{attrs:{id:"function-absorb-nb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-absorb-nb"}},[t._v("#")]),t._v(" function absorb_nb")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("absorb_type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("contract_type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("absorb_nb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nbkey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nbval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" absorb_type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" absorb_fun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" contract_type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" contract_fun\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("对格点的指定nbkey每一条边，记录这条边的(ind,nbind)，吸收边的val到格点的val，然后删掉这条边。")]),t._v(" "),a("p",[t._v("A(this) <-—> B(nb) <-—> C => A <-— B <-—> C")]),t._v(" "),a("h3",{attrs:{id:"function-harmless-absorb-nb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-harmless-absorb-nb"}},[t._v("#")]),t._v(" function harmless_absorb_nb")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("absorb_type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("harmless_absorb_nb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    NodeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" thisval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("set"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("pair"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("edge2key_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ind_pairs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" absorb_type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" absorb_fun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Condition "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" cond\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),a("p",[t._v("对格点的指定nbkey每一条边，如果符合条件，记录这条边的(ind,nbind)，吸收边的val到给定的的val，将ind-pair填入ind_pairs")]),t._v(" "),a("h3",{attrs:{id:"function-transfer-edge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-transfer-edge"}},[t._v("#")]),t._v(" function transfer_edge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transfer_edge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("network")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("IterNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" newit\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("对格点的每一条边，将它转移为格点newit的边")]),t._v(" "),a("h3",{attrs:{id:"function-transfer-edge-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-transfer-edge-2"}},[t._v("#")]),t._v(" function transfer_edge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transfer_edge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("network")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("IterNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" newit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Condition "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" cond\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("对格点的每一条边，如果条件成立，将它和邻居的这条边转移为格点newit和邻居的边")]),t._v(" "),a("h3",{attrs:{id:"function-transfer-edge-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-transfer-edge-3"}},[t._v("#")]),t._v(" function transfer_edge")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transfer_edge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("network")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("IterNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" newit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("network")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("IterNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" newit2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Condition "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" cond\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("对格点的每一条边，如果条件成立，将它和邻居的这条边转移为格点newit和邻居的边; 否则，将它和邻居的这条边转移为格点newit2和邻居的边")]),t._v(" "),a("h3",{attrs:{id:"function-relink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-relink"}},[t._v("#")]),t._v(" function relink")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("relink")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("nodekey_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodes\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("更新所有半边的nbitr和nbegitr指针")]),t._v(" "),a("h3",{attrs:{id:"function-consistency"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-consistency"}},[t._v("#")]),t._v(" function consistency")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("consistency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("nodekey_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ostream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" diagnosis\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),a("p",[t._v("检查格点的一致性")]),t._v(" "),a("h3",{attrs:{id:"function-fope"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-fope"}},[t._v("#")]),t._v(" function fope")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NodeVal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("EdgeVal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("利用函数更新格点和边上的信息")]),t._v(" "),a("h3",{attrs:{id:"function-fmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-fmap"}},[t._v("#")]),t._v(" function fmap")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeType2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nNodeType2 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fmap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" this_key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeType2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NodeValType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeType2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("EdgeValType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),a("p",[t._v("从旧的格点得到新的格点，其格点和边上的信息由旧的格点通过映射得到")]),t._v(" "),a("h3",{attrs:{id:"function-fmap-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-fmap-2"}},[t._v("#")]),t._v(" function fmap")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeType2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nNodeType2 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fmap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" new_key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeType2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NodeValType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeType2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("EdgeValType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeType2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NodeKeyType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeType2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("EdgeKeyType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f4\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),a("p",[t._v("从旧的格点得到新的格点，其格点和边的名字，以及格点和边上的信息，由旧的格点通过映射得到")]),t._v(" "),a("h3",{attrs:{id:"function-gfmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-gfmap"}},[t._v("#")]),t._v(" function gfmap")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeVal2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EdgeVal2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nnode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("gfmap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NodeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" this_key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NodeVal2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("EdgeVal2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),a("p",[t._v("从旧的格点得到新的格点，其格点和边上的信息由旧的格点通过映射得到")]),t._v(" "),a("h3",{attrs:{id:"function-gfope"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-gfope"}},[t._v("#")]),t._v(" function gfope")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("gfope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NodeVal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("function"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("EdgeVal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EdgeKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("利用函数更新格点和边上的信息")]),t._v(" "),a("h2",{attrs:{id:"public-attributes-documentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-attributes-documentation"}},[t._v("#")]),t._v(" Public Attributes Documentation")]),t._v(" "),a("h3",{attrs:{id:"variable-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variable-key"}},[t._v("#")]),t._v(" variable key")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("NodeKey key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("格点的名字")]),t._v(" "),a("h3",{attrs:{id:"variable-val"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variable-val"}},[t._v("#")]),t._v(" variable val")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("NodeVal val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("格点上附着的信息")]),t._v(" "),a("h3",{attrs:{id:"variable-edges"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variable-edges"}},[t._v("#")]),t._v(" variable edges")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" half_edge"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Trait")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("edgekey_less "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" edges"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("格点所包含的半边, 存储了半边之间如何连接的信息")]),t._v(" "),a("p",[a("strong",[t._v("See")]),t._v(": "),a("RouterLink",{attrs:{to:"/Classes/structnet_1_1half__edge.html"}},[t._v("half_edge")])],1),t._v(" "),a("h2",{attrs:{id:"friends-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friends-2"}},[t._v("#")]),t._v(" Friends")]),t._v(" "),a("h3",{attrs:{id:"friend-output-node-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friend-output-node-text"}},[t._v("#")]),t._v(" friend output_node_text")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("friend")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ostream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("output_node_text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ostream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("格点的字符串输出")]),t._v(" "),a("h3",{attrs:{id:"friend-input-node-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friend-input-node-text"}},[t._v("#")]),t._v(" friend input_node_text")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("friend")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("istream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("input_node_text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("istream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("格点的字符串输入")]),t._v(" "),a("h3",{attrs:{id:"friend-output-node-bin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friend-output-node-bin"}},[t._v("#")]),t._v(" friend output_node_bin")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("friend")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ostream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("output_node_bin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ostream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("格点的二进制输出")]),t._v(" "),a("h3",{attrs:{id:"friend-input-node-bin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#friend-input-node-bin"}},[t._v("#")]),t._v(" friend input_node_bin")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("friend")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("istream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("input_node_bin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("istream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" NodeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeVal1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NodeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EdgeKey1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Trait1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("格点的二进制输入")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("Updated on 15 June 2022 at 16:04:19 CST")])])}),[],!1,null,null,null);s.default=n.exports}}]);